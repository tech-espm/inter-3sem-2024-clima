<header>
    <div>
        <h1>Clima Tact</h1>
        <p>Dados por Dia</p>
    </div>
</header>
<main>
	<div class="container-fluid">
		<section>
			<div class="postit">
				<form id="form">
					<div class="form-group">
						<label for="mes">Mês</label>
						<select id="mes" name="mes" class="form-control">
							<option value="1" <%- (mes === 1 ? 'selected' : '') %>>Janeiro</option>
							<option value="2" <%- (mes === 2 ? 'selected' : '') %>>Fevereiro</option>
							<option value="3" <%- (mes === 3 ? 'selected' : '') %>>Março</option>
							<option value="4" <%- (mes === 4 ? 'selected' : '') %>>Abril</option>
							<option value="5" <%- (mes === 5 ? 'selected' : '') %>>Maio</option>
							<option value="6" <%- (mes === 6 ? 'selected' : '') %>>Junho</option>
							<option value="7" <%- (mes === 7 ? 'selected' : '') %>>Julho</option>
							<option value="8" <%- (mes === 8 ? 'selected' : '') %>>Agosto</option>
							<option value="9" <%- (mes === 9 ? 'selected' : '') %>>Setembro</option>
							<option value="10" <%- (mes === 10 ? 'selected' : '') %>>Outubro</option>
							<option value="11" <%- (mes === 11 ? 'selected' : '') %>>Novembro</option>
							<option value="12" <%- (mes === 12 ? 'selected' : '') %>>Dezembro</option>
						</select>
					</div>
					<div class="form-group">
						<label for="ano">Ano</label>
						<input id="ano" name="ano" class="form-control" type="number" value="<%= ano %>" />
					</div>

					<button type="submit" class="btn btn-primary">Listar</button>
				</form>
			</div>
		</section>

		<div class="card shadow my-4">
			<div class="card-body" id="div-grafico"></div>
		</div>

	</div>

	<script src="/public/js/jquery-validate/jquery.validate.min.js"></script>
	<script src="/public/js/jquery-validate/additional-methods.min.js"></script>
	<script src="/public/js/jquery-validate/localization/messages_pt_BR.min.js"></script>
	<script type="text/javascript" src="/public/js/chart.js/chart.min.js"></script>

	<script type="text/javascript">
		"use strict";

		$("#form").validate({
			rules: {
				data: {
					required: true
				}
			},
			submitHandler: function () {
				atualizarDados();
			}
		});

		async function atualizarDados() {
			let ano = $("#ano").val();
			let mes = $("#mes").val();

			waitSwal();

			try {

				let response = await fetch("/obterDadosPorMes?ano=" + encodeURIComponent(ano) + "&mes=" + encodeURIComponent(mes));

				if (response.ok) {

					Swal.close();

					let div = document.getElementById("div-grafico");
					div.innerHTML = '<canvas id="grafico-barras" style="height: 50vh;"></canvas>';

					let labels = [], umidades = [], temperaturas = [], luminosidades = [];

					let dados = await response.json();
					if (!dados || !dados.length) {
						Swal.fire("Erro", "Sem dados no mês especificado!", "error");
						return;
					}

					for (let i = 0; i < dados.length; i++) {
						labels.push(dados[i].dia);
						umidades.push(dados[i].umidade);
						temperaturas.push(dados[i].temperatura);
						luminosidades.push(dados[i].luminosidade);
					}

					let grafico = new Chart(document.getElementById("grafico-barras"), {
						type: "line", // "bar"
						data: {
							labels: labels,
							datasets: [{
								label: "Umidade",
								backgroundColor: "#0066ff",
								hoverBackgroundColor: "#0055ee",
								borderColor: "#0055ee",
								data: umidades,
							}, {
								label: "Temperatura",
								backgroundColor: "#990000",
								hoverBackgroundColor: "#880000",
								borderColor: "#880000",
								data: temperaturas,
							}, {
								label: "Luminosidade",
								backgroundColor: "#ff9900",
								hoverBackgroundColor: "#ee8800",
								borderColor: "#ee8800",
								data: luminosidades,
							}],
						},
						options: {
							maintainAspectRatio: false,
							layout: {
								padding: {
									left: 10,
									right: 25,
									top: 25,
									bottom: 0
								}
							},
							scales: {
								x: {
									gridLines: {
										display: false,
										drawBorder: false
									},
									ticks: {
										maxTicksLimit: 10
									},
									maxBarThickness: 25,
								},
								y: {
									//display: false,
									ticks: {
										min: 0,
										max: 10,
										maxTicksLimit: 10,
										padding: 10
									},
									gridLines: {
										color: "rgb(234, 236, 244)",
										zeroLineColor: "rgb(234, 236, 244)",
										drawBorder: false,
										borderDash: [2],
										zeroLineBorderDash: [2]
									}
								},
							},
							legend: {
								display: false
							},
							tooltips: {
								titleMarginBottom: 10,
								titleFontColor: '#6e707e',
								titleFontSize: 14,
								backgroundColor: "rgb(255,255,255)",
								bodyFontColor: "#858796",
								borderColor: '#dddfeb',
								borderWidth: 1,
								xPadding: 15,
								yPadding: 15,
								displayColors: false,
								caretPadding: 10
							},
						}
					});

				} else {
					await exibirErro(response);
				}

			} catch (ex) {
				Swal.fire("Erro", "Erro ao listar os dados: " + ex.message, "error");
			}
		}

		atualizarDados();

	</script>
</main>
